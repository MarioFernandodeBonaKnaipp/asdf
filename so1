import java.util.Arrays;

public class SortingAnalysis {

    public static void main(String[] args) {
        int[] data = {7, 12, 35, 1, 29, 17, 20};

        System.out.println("Vetor original: " + Arrays.toString(data));
        quickSort(data, 0, data.length - 1);
        
        System.out.println("Vetor ordenado: " + Arrays.toString(data));
    }

    private static void quickSort(int[] array, int low, int high) {
        if (low < high) {
            int pi = randomizedPartition(array, low, high);
            System.out.println("Tamanho da partição menores: " + pi);
            System.out.println("Tamanho da partição maiores: " + (high - pi));
            System.out.println("Posição do pivô: " + pi);
            quickSort(array, low, pi - 1);
            quickSort(array, pi + 1, high);
        }
    }

    private static int randomizedPartition(int[] array, int low, int high) {
        int pivotIndex = low + (int)(Math.random() * (high - low + 1));
        swap(array, pivotIndex, high); 
        return partition(array, low, high);
    }

    private static int partition(int[] array, int low, int high) {
        int pivot = array[high];
        int i = (low - 1); 
        for (int j = low; j < high; j++) {
            if (array[j] <= pivot) {
                i++;
                int temp = array[i];
                array[i] = array[j];
                array[j] = temp;
            }
        }
        int temp = array[i + 1];
        array[i + 1] = array[high];
        array[high] = temp;
        return i + 1;
    }

    private static void swap(int[] array, int i, int j) {
        if (i == j) return; 
        int temp = array[i];
        array[i] = array[j];
        array[j] = temp;
    }
}
